_format_version: "3.0"

services:
  - name: auth-service
    url: http://host.docker.internal:8080
    routes:
      - name: auth-route
        paths: ["/auth"]

  - name: phishing-service
    url: http://host.docker.internal:8081
    routes:
      - name: phishing-route
        paths: ["/scan/url"]
        strip_path: true
        preserve_host: false

  - name: malware-service
    url: http://host.docker.internal:8082
    routes:
      - name: malware-route
        paths: ["/scan/file"]
        strip_path: true
        preserve_host: false

  - name: history-service
    url: http://host.docker.internal:8083
    routes:
      - name: history-route
        paths: ["/history"]

  - name: report-service
    url: http://host.docker.internal:8084
    routes:
      - name: report-route
        paths: ["/reports"]

  - name: notify-service
    url: http://host.docker.internal:8085
    routes:
      - name: notify-route
        paths: ["/notifications"]

plugins:
  # Global CORS
  - name: cors
    config:
      origins: ["http://localhost:5173", "http://localhost:3000", "*"]
      methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS", "HEAD", "PATCH"]
      headers: ["Accept", "Authorization", "Content-Type", "X-Requested-With"]
      credentials: true
      max_age: 3600

  # Path rewrite for phishing service
  - name: request-transformer
    service: phishing-service
    config:
      add:
        headers:
          - "X-Forwarded-Proto: http"
      replace:
        uri: "/v1/url/check"

  # Path rewrite for malware service  
  - name: request-transformer
    service: malware-service
    config:
      add:
        headers:
          - "X-Forwarded-Proto: http"
      replace:
        uri: "/v1/file/analyze"

  # JWT Authentication for protected services
  - name: jwt
    service: phishing-service
    config:
      key_claim_name: "iss"
      secret_is_base64: false
      uri_param_names: ["token"]
      cookie_names: ["token"] 
      header_names: ["authorization"]

  - name: jwt  
    service: malware-service
    config:
      key_claim_name: "iss"
      secret_is_base64: false
      uri_param_names: ["token"]
      cookie_names: ["token"]
      header_names: ["authorization"]

  - name: jwt
    service: history-service  
    config:
      key_claim_name: "iss"
      secret_is_base64: false
      uri_param_names: ["token"]
      cookie_names: ["token"]
      header_names: ["authorization"]

  - name: jwt
    service: report-service
    config:
      key_claim_name: "iss"
      secret_is_base64: false
      uri_param_names: ["token"]
      cookie_names: ["token"]
      header_names: ["authorization"]

consumers:
  - username: forgeharbor-frontend
    jwt_secrets:
      - key: "forgeharbor"
        algorithm: "RS256"